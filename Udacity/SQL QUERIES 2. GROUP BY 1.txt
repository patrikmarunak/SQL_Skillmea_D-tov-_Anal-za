SELECT accounts.name, orders.occurred_at / ťahá iba tieto stĺpce
FROM orders
JOIN accounts
ON orders.account_id = accounts.id;

SELECT *				/ ťahá všetky stĺpce z oboch 
FROM orders
JOIN accounts
ON orders.account_id = accounts.id;

SELECT orders.*				/ťahá všetky stĺpce iba z jednej 
FROM orders
JOIN accounts
ON orders.account_id = accounts.id;

SELECT  orders.standard_qty,
	orders.gloss_qty,
        orders.poster_qty,
        accounts.website,
        accounts.primary_poc 
FROM orders
JOIN accounts
ON orders.account_id = accounts.id;

SELECT a.primary_poc, w.occurred_at, w.channel, a.name / spojenie 2 tabuliek, zoradené podla abecedy 
FROM web_events w
JOIN accounts a
ON w.account_id = a.id
WHERE a.name = 'Walmart';

SELECT r.name region, s.name rep, a.name account / podla regionu
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
ORDER BY a.name;

SELECT r.name region, s.name rep, a.name account	/ podla regionu a začiatočného písmena
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
WHERE r.name = 'Midwest' AND s.name LIKE 'S%'
ORDER BY a.name;

SELECT r.name region, a.name account, 			/ spája 3 tabulky, jednotka ceny na objednávku
       o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id;

19.7

SELECT r.name region, s.name rep, a.name account	
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
WHERE r.name = 'Midwest'
ORDER BY a.name;

SELECT r.name region, (o.total_amt_usd/total + 0,01) AS UnitPrice,
       a.name accounts
FROM accounts a
JOIN orders o
ON a.id = o.account_id
JOIN sales_reps s
ON a.sales_rep_id = s.id
JOIN region r
ON s.region_id = r.id
WHERE o.standard_amt_usd > 100

SELECT r.name region,(o.total_amt_usd/total + 0,01) AS UnitPrice, a.name accounts
FROM accounts a
JOIN orders o
ON a.id = o.account_id
JOIN sales_reps s
ON a.sales_rep_id = s.id
JOIN region r
ON s.region_id = r.id
WHERE o.standard_amt_usd > 100 AND o.poster_amt_usd > 50
ORDER BY UnitPrice DESC

SELECT a.name accouts, w.channel web_events
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
WHERE a.id = '1001'

SELECT o.occurred_at orders, a.name accounts, o.total orders, o.total_amt_usd orders
FROM orders o
JOIN accounts a
ON o.account_id = a.id
WHERE w.occurred_at BETWEEN '1/1/2015' AND '12/31/2015'
ORDER BY o.occurred_at DESC;

20.7
Typy JOINov (Union, CROSS, SELF)

SELECT City FROM Customers
UNION
SELECT City FROM Suppliers
ORDER BY City;

SELECT City, Country FROM Customers
WHERE Country='Germany'
UNION
SELECT City, Country FROM Suppliers
WHERE Country='Germany'
ORDER BY City;

SELECT foods.item_name,foods.item_unit,
company.company_name,company.company_city 
FROM foods 
CROSS JOIN company;

SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, A.City
FROM Customers A, Customers B
WHERE A.CustomerID <> B.CustomerID
AND A.City = B.City
ORDER BY A.City;

AGREGÁCIA ÚDAJOV

SELECT year,	/ horizontálna agragácia 
       month,
       west,
       south,
       west + south - 4 * year AS nonsense_column
  FROM tutorial.us_housing_units

SUM

SELECT SUM(standard_amt_usd)/SUM(standard_qty) AS standard_price_per_unit
FROM orders;

MIN

SELECT MIN(occurred_at) AS First_oder
FROM orders

AVG

SELECT AVG(standard_qty) AS standard_avg,
	AVG(standard_amt_usd) AS standard_usd_avg,
	AVG(gloss_qty) AS gloss_avg,
        AVG(gloss_amt_usd) AS gloss_usd_avg,
        AVG(poster_qty) AS poster_avg,
        AVG(poster_amt_usd) AS poster_usd_avg      
FROM orders

MEDIAN

SELECT *
FROM (SELECT total_amt_usd
      FROM orders
      ORDER BY total_amt_usd
      LIMIT 3457) AS Table1
ORDER BY total_amt_usd DESC
LIMIT 2;

GROUP BY

Which account (by name) placed the earliest order? Your solution should have the account name and the date of the order. 

SELECT a.name, o.occurred_at
FROM accounts a
JOIN orders o
ON a.id = o.account_id
ORDER BY occurred_at
LIMIT 1;

Via what channel did the most recent (latest) web_event occur, which account was associated with this web_event? Your query should return only three values - the date, channel, and account name.

SELECT w.occurred_at AS TheDate, w.channel, a.name AS Company
FROM web_events w
JOIN accounts a
ON w.account_id = a.id 
ORDER BY w.occurred_at DESC
LIMIT 1;

Find the total number of times each type of channel from the web_events was used. Your final table should have two columns - the channel and the number of times the channel was used.

SELECT COUNT(*) AS UsedTimes, channel
FROM web_events
GROUP BY channel

Who was the primary contact associated with the earliest web_event?

SELECT a.primary_poc AS PrimaryContact, w.occurred_at 
FROM web_events w 
JOIN accounts a
ON w.account_id = a.id
ORDER BY w.occurred_at
LIMIT 1

What was the smallest order placed by each account in terms of total usd. Provide only two columns - the account name and the total usd. Order from smallest dollar amounts to largest.

SELECT a.name, MIN(o.total_amt_usd) AS SmallestOrder
FROM accounts a 
JOIN orders o
ON a.id = o.account_id
GROUP BY a.name
ORDER BY SmallestOrder

Find the number of sales reps in each region. Your final table should have two columns - the region and the number of sales_reps. Order from fewest reps to most reps.

SELECT r.name region, COUNT(s.region_id) AS NumberSalesReps
FROM region r
JOIN sales_reps s
ON r.id = s.region_id
GROUP BY r.name
ORDER BY NumberSalesReps




